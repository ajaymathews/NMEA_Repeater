Microchip MPLAB XC8 Compiler V1.45 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.45\dat\en_msgs.txt -cs \
  -h+dist/default/production\NMEA_REPEATER.X.production.sym \
  --cmf=dist/default/production\NMEA_REPEATER.X.production.cmf -z -Q16F877A \
  -oC:\Users\AJAY\AppData\Local\Temp\s9ug.2 \
  -Mdist/default/production/NMEA_REPEATER.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\AJAY\AppData\Local\Temp\s9ug.obj \
  dist/default/production\NMEA_REPEATER.X.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\AJAY\AppData\Local\Temp\s9ug.obj
                end_init                              0        0        3        0       0
dist/default/production\NMEA_REPEATER.X.production.obj
                cinit                               7F0      7F0       10      FE0       0
                text5                               644      644        A      C88       0
                text4                               64E      64E        A      C9C       0
                text3                               676      676       2E      CEC       0
                text2                               6E5      6E5      10B      DCA       0
                text1                               658      658        D      CB0       0
                maintext                            6A4      6A4       41      D48       0
                cstackBANK0                          20       20       4A       20       1
                cstackCOMMON                         70       70        C       70       1
                inittext                            665      665       11      CCA       0
                dataBANK1                            A0       A0        7       A0       1
                strings                               3        3       E8        6       0
                idataBANK1                          63D      63D        7      C7A       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7F0      7F0       10         0
                text5                               644      644        A         0
                text4                               64E      64E        A         0
                text3                               676      676       2E         0
                text2                               6E5      6E5      10B         0
                text1                               658      658        D         0
                maintext                            6A4      6A4       41         0
                inittext                            665      665       11         0
                idataBANK1                          63D      63D        7         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                               3        3       E8         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1

        CLASS   BANK0          
                cstackBANK0                          20       20       4A         1

        CLASS   BANK1          
                dataBANK1                            A0       A0        7         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                strings                        000003  0000E8  0000EB         6       0  STRING      2
                cstackBANK0                    000020  00004A  00006A        20       1  BANK0       1
                cstackCOMMON                   000070  00000C  00007C        70       1  COMMON      1
                dataBANK1                      0000A0  000007  0000A7        A0       1  BANK1       1
                idataBANK1                     00063D  000007  000644       C7A       0  CODE        2
                text5                          000644  00000A  00064E       C88       0  CODE        2
                text4                          00064E  00000A  000658       C9C       0  CODE        2
                text1                          000658  00000D  000665       CB0       0  CODE        2
                inittext                       000665  000011  000676       CCA       0  CODE        2
                text3                          000676  00002E  0006A4       CEC       0  CODE        2
                maintext                       0006A4  000041  0006E5       D48       0  CODE        2
                text2                          0006E5  00010B  0007F0       DCA       0  CODE        2
                cinit                          0007F0  000010  000800       FE0       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006A-006F              6           1
        BANK1            00A7-00EF             49           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             00EB-063C            552           2
                         0800-1FFF            800
        COMMON           007C-007D              2           1
        CONFIG           2007-2007              1           2
        CONST            00EB-063C            100           2
                         0800-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            00EB-063C            100           2
                         0800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              006A-006F              6           1
                         00A7-00EF             49
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          00EB-063C            552           2
                         0800-1FFF           1800
        STRING           00EB-063C            100           2
                         0800-1FFF            100

                                  Symbol Table

_RB0                     (abs)        0030
_RC6                     (abs)        003E
_RC7                     (abs)        003F
_RCIF                    (abs)        0065
_RCREG                   (abs)        001A
_RCSTA                   (abs)        0018
_SPBRG                   (abs)        0099
_TRISB0                  (abs)        0430
_TRISC6                  (abs)        043E
_TRISC7                  (abs)        043F
_TRMT                    (abs)        04C1
_TXREG                   (abs)        0019
_TXSTA                   (abs)        0098
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__Hbank2                 bank2        0000
__Hbank3                 bank3        0000
__Hcinit                 cinit        0800
__Hclrtext               clrtext      0000
__Hcode                  code         0000
__Hcommon                common       0000
__Hconfig                config       0000
__HcstackBANK0           cstackBANK0  0000
__HcstackCOMMON          cstackCOMMON 0000
__HdataBANK1             dataBANK1    0000
__Heeprom_data           eeprom_data  0000
__Hend_init              end_init     0003
__Hfunctab               functab      0000
__HidataBANK1            idataBANK1   0000
__Hidloc                 idloc        0000
__Hinit                  init         0000
__Hinittext              inittext     0000
__Hintentry              intentry     0000
__Hmaintext              maintext     0000
__Hpowerup               powerup      0000
__Hram                   ram          0000
__Hreset_vec             reset_vec    0000
__Hsfr0                  sfr0         0000
__Hsfr1                  sfr1         0000
__Hsfr2                  sfr2         0000
__Hsfr3                  sfr3         0000
__Hspace_0               (abs)        0800
__Hspace_1               (abs)        00A7
__Hspace_2               (abs)        0000
__Hspace_3               (abs)        0000
__Hstack                 stack        0000
__Hstrings               strings      0000
__Htext                  text         0000
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__Lbank2                 bank2        0000
__Lbank3                 bank3        0000
__Lcinit                 cinit        07F0
__Lclrtext               clrtext      0000
__Lcode                  code         0000
__Lcommon                common       0000
__Lconfig                config       0000
__LcstackBANK0           cstackBANK0  0000
__LcstackCOMMON          cstackCOMMON 0000
__LdataBANK1             dataBANK1    0000
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     0000
__Lfunctab               functab      0000
__LidataBANK1            idataBANK1   0000
__Lidloc                 idloc        0000
__Linit                  init         0000
__Linittext              inittext     0000
__Lintentry              intentry     0000
__Lmaintext              maintext     0000
__Lpowerup               powerup      0000
__Lram                   ram          0000
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0000
__Lsfr1                  sfr1         0000
__Lsfr2                  sfr2         0000
__Lsfr3                  sfr3         0000
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_3               (abs)        0000
__Lstack                 stack        0000
__Lstrings               strings      0000
__Ltext                  text         0000
__S0                     (abs)        0800
__S1                     (abs)        00A7
__S2                     (abs)        0000
__S3                     (abs)        0000
___int_sp                stack        0000
___latbits               (abs)        0002
___sp                    stack        0000
__end_of__initialization cinit        07FC
__end_of__stringtab      strings      0013
__end_of_main            maintext     06E5
__end_of_receive         text5        064E
__end_of_str_receive     text2        07F0
__end_of_str_transmit    text3        06A4
__end_of_transmit        text4        0658
__end_of_uart_init       text1        0665
__initialization         cinit        07F0
__pcstackBANK0           cstackBANK0  0020
__pcstackCOMMON          cstackCOMMON 0070
__pdataBANK1             dataBANK1    00A0
__pidataBANK1            idataBANK1   063D
__pmaintext              maintext     06A4
__pstrings               strings      0003
__ptext1                 text1        0658
__ptext2                 text2        06E5
__ptext3                 text3        0676
__ptext4                 text4        064E
__ptext5                 text5        0644
__size_of_main           (abs)        0000
__size_of_receive        (abs)        0000
__size_of_str_receive    (abs)        0000
__size_of_str_transmit   (abs)        0000
__size_of_transmit       (abs)        0000
__size_of_uart_init      (abs)        0000
__stringbase             strings      0012
__stringtab              strings      0003
_main                    maintext     06A4
_receive                 text5        0644
_str_receive             text2        06E5
_str_transmit            text3        0676
_transmit                text4        064E
_uart_init               text1        0658
btemp                    (abs)        007E
end_of_initialization    cinit        07FC
init_fetch0              inittext     0665
init_ram0                inittext     0669
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
receive@b                cstackCOMMON 0071
reset_vec                reset_vec    0000
stackhi                  (abs)        0000
stacklo                  (abs)        0000
start                    init         0000
start_initialization     cinit        07F0
str_receive@F1194        dataBANK1    00A0
str_receive@c            cstackBANK0  0069
str_receive@count        cstackBANK0  0062
str_receive@data         cstackBANK0  0020
str_receive@flag         cstackBANK0  005E
str_receive@full_indx    cstackBANK0  0068
str_receive@g_check      cstackBANK0  0040
str_receive@i            cstackBANK0  005C
str_receive@lat          cstackBANK0  0052
str_receive@lat_check    cstackBANK0  0060
str_receive@latcount     cstackBANK0  0066
str_receive@lon          cstackBANK0  0047
str_receive@loncount     cstackBANK0  0064
str_transmit@p           cstackCOMMON 0071
transmit@b               cstackCOMMON 0070
wtemp0                   (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 107 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_str_receive
		_str_transmit
		_uart_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _uart_init *****************
 Defined at:
		line 12 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _str_receive *****************
 Defined at:
		line 42 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data           32    0[BANK0 ] unsigned char [32]
  lon            11   39[BANK0 ] unsigned char [11]
  lat            10   50[BANK0 ] unsigned char [10]
  g_check         7   32[BANK0 ] unsigned char [7]
  latcount        2   70[BANK0 ] int 
  loncount        2   68[BANK0 ] int 
  count           2   66[BANK0 ] int 
  lat_check       2   64[BANK0 ] int 
  flag            2   62[BANK0 ] int 
  i               2   60[BANK0 ] int 
  c               1   73[BANK0 ] unsigned char 
  full_indx       1   72[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   51[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      74       0       0       0
      Temps:          4       0       0       0       0
      Totals:         4      74       0       0       0
Total ram usage:       78 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_receive
		_str_transmit
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _str_transmit *****************
 Defined at:
		line 32 in file "newmain.c"
 Parameters:    Size  Location     Type
  p               2    1[COMMON] PTR unsigned char 
		 -> STR_4(192), STR_3(3), STR_2(11), STR_1(10), 
		 -> str_receive@lon(11), str_receive@lat(10), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_transmit
 This function is called by:
		_str_receive
		_main
 This function uses a non-reentrant model


 *************** function _transmit *****************
 Defined at:
		line 26 in file "newmain.c"
 Parameters:    Size  Location     Type
  b               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  b               1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_str_transmit
 This function uses a non-reentrant model


 *************** function _receive *****************
 Defined at:
		line 19 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  b               1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_str_receive
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
newmain.c
		_main          		CODE           	06A4	0000	66
		_str_receive   		CODE           	06E5	0000	268
		_uart_init     		CODE           	0658	0000	14
		_receive       		CODE           	0644	0000	11
		_str_transmit  		CODE           	0676	0000	47
		_transmit      		CODE           	064E	0000	11

newmain.c estimated size: 417

shared
		__stringtab    		STRING         	0003	0000	17
		__initialization		CODE           	07F0	0000	13

shared estimated size: 30

