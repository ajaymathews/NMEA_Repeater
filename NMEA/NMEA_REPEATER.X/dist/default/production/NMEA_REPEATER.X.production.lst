

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Dec 19 10:19:41 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113                           
   114                           	psect	idataBANK1
   115  063D                     __pidataBANK1:	
   116                           
   117                           ;initializer for str_receive@F1194
   118  063D  3424               	retlw	36
   119  063E  3447               	retlw	71
   120  063F  3450               	retlw	80
   121  0640  3447               	retlw	71
   122  0641  3447               	retlw	71
   123  0642  3441               	retlw	65
   124  0643  3400               	retlw	0
   125  0019                     _TXREG	set	25
   126  001A                     _RCREG	set	26
   127  0018                     _RCSTA	set	24
   128  0030                     _RB0	set	48
   129  003E                     _RC6	set	62
   130  003F                     _RC7	set	63
   131  0065                     _RCIF	set	101
   132  0099                     _SPBRG	set	153
   133  0098                     _TXSTA	set	152
   134  0430                     _TRISB0	set	1072
   135  043F                     _TRISC7	set	1087
   136  043E                     _TRISC6	set	1086
   137  04C1                     _TRMT	set	1217
   138                           
   139                           	psect	strings
   140  0003                     __pstrings:	
   141  0003                     stringtab:	
   142  0003                     __stringtab:	
   143                           
   144                           ;	String table - string pointers are 1 byte each
   145  0003  1BFF               	btfsc	btemp+1,7
   146  0004  280D               	ljmp	stringcode
   147  0005  1383               	bcf	3,7
   148  0006  187F               	btfsc	btemp+1,0
   149  0007  1783               	bsf	3,7
   150  0008  0800               	movf	0,w
   151  0009  0A84               	incf	4,f
   152  000A  1903               	skipnz
   153  000B  0AFF               	incf	btemp+1,f
   154  000C  0008               	return
   155  000D                     stringcode:	
   156  000D                     stringdir:	
   157  000D  3000               	movlw	high stringdir
   158  000E  008A               	movwf	10
   159  000F  0804               	movf	4,w
   160  0010  0A84               	incf	4,f
   161  0011  0782               	addwf	2,f
   162  0012                     __stringbase:	
   163  0012  3400               	retlw	0
   164  0013                     __end_of__stringtab:	
   165  0013                     STR_4:	
   166  0013  3424               	retlw	36	;'$'
   167  0014  3447               	retlw	71	;'G'
   168  0015  3450               	retlw	80	;'P'
   169  0016  3447               	retlw	71	;'G'
   170  0017  3453               	retlw	83	;'S'
   171  0018  3441               	retlw	65	;'A'
   172  0019  342C               	retlw	44	;','
   173  001A  3441               	retlw	65	;'A'
   174  001B  342C               	retlw	44	;','
   175  001C  3433               	retlw	51	;'3'
   176  001D  342C               	retlw	44	;','
   177  001E  3430               	retlw	48	;'0'
   178  001F  3431               	retlw	49	;'1'
   179  0020  342C               	retlw	44	;','
   180  0021  3430               	retlw	48	;'0'
   181  0022  3432               	retlw	50	;'2'
   182  0023  342C               	retlw	44	;','
   183  0024  3430               	retlw	48	;'0'
   184  0025  3433               	retlw	51	;'3'
   185  0026  342C               	retlw	44	;','
   186  0027  3430               	retlw	48	;'0'
   187  0028  3434               	retlw	52	;'4'
   188  0029  342C               	retlw	44	;','
   189  002A  3430               	retlw	48	;'0'
   190  002B  3435               	retlw	53	;'5'
   191  002C  342C               	retlw	44	;','
   192  002D  3430               	retlw	48	;'0'
   193  002E  3436               	retlw	54	;'6'
   194  002F  342C               	retlw	44	;','
   195  0030  3430               	retlw	48	;'0'
   196  0031  3437               	retlw	55	;'7'
   197  0032  342C               	retlw	44	;','
   198  0033  3430               	retlw	48	;'0'
   199  0034  3438               	retlw	56	;'8'
   200  0035  342C               	retlw	44	;','
   201  0036  3430               	retlw	48	;'0'
   202  0037  3439               	retlw	57	;'9'
   203  0038  342C               	retlw	44	;','
   204  0039  3431               	retlw	49	;'1'
   205  003A  3430               	retlw	48	;'0'
   206  003B  342C               	retlw	44	;','
   207  003C  3431               	retlw	49	;'1'
   208  003D  3431               	retlw	49	;'1'
   209  003E  342C               	retlw	44	;','
   210  003F  3431               	retlw	49	;'1'
   211  0040  3432               	retlw	50	;'2'
   212  0041  342C               	retlw	44	;','
   213  0042  3431               	retlw	49	;'1'
   214  0043  342E               	retlw	46	;'.'
   215  0044  3430               	retlw	48	;'0'
   216  0045  342C               	retlw	44	;','
   217  0046  3431               	retlw	49	;'1'
   218  0047  342E               	retlw	46	;'.'
   219  0048  3430               	retlw	48	;'0'
   220  0049  342C               	retlw	44	;','
   221  004A  3431               	retlw	49	;'1'
   222  004B  342E               	retlw	46	;'.'
   223  004C  3430               	retlw	48	;'0'
   224  004D  342A               	retlw	42	;'*'
   225  004E  3433               	retlw	51	;'3'
   226  004F  3430               	retlw	48	;'0'
   227  0050  340A               	retlw	10
   228  0051  3424               	retlw	36	;'$'
   229  0052  3447               	retlw	71	;'G'
   230  0053  3450               	retlw	80	;'P'
   231  0054  3447               	retlw	71	;'G'
   232  0055  3447               	retlw	71	;'G'
   233  0056  3441               	retlw	65	;'A'
   234  0057  342C               	retlw	44	;','
   235  0058  3431               	retlw	49	;'1'
   236  0059  3436               	retlw	54	;'6'
   237  005A  3434               	retlw	52	;'4'
   238  005B  3435               	retlw	53	;'5'
   239  005C  3431               	retlw	49	;'1'
   240  005D  3434               	retlw	52	;'4'
   241  005E  342E               	retlw	46	;'.'
   242  005F  3435               	retlw	53	;'5'
   243  0060  3433               	retlw	51	;'3'
   244  0061  3435               	retlw	53	;'5'
   245  0062  342C               	retlw	44	;','
   246  0063  3431               	retlw	49	;'1'
   247  0064  3430               	retlw	48	;'0'
   248  0065  3430               	retlw	48	;'0'
   249  0066  3436               	retlw	54	;'6'
   250  0067  342E               	retlw	46	;'.'
   251  0068  3434               	retlw	52	;'4'
   252  0069  3431               	retlw	49	;'1'
   253  006A  3432               	retlw	50	;'2'
   254  006B  342C               	retlw	44	;','
   255  006C  344E               	retlw	78	;'N'
   256  006D  342C               	retlw	44	;','
   257  006E  3430               	retlw	48	;'0'
   258  006F  3437               	retlw	55	;'7'
   259  0070  3436               	retlw	54	;'6'
   260  0071  3432               	retlw	50	;'2'
   261  0072  3431               	retlw	49	;'1'
   262  0073  342E               	retlw	46	;'.'
   263  0074  3431               	retlw	49	;'1'
   264  0075  3431               	retlw	49	;'1'
   265  0076  3434               	retlw	52	;'4'
   266  0077  342C               	retlw	44	;','
   267  0078  3445               	retlw	69	;'E'
   268  0079  342C               	retlw	44	;','
   269  007A  3431               	retlw	49	;'1'
   270  007B  342C               	retlw	44	;','
   271  007C  3431               	retlw	49	;'1'
   272  007D  3432               	retlw	50	;'2'
   273  007E  342C               	retlw	44	;','
   274  007F  3431               	retlw	49	;'1'
   275  0080  342E               	retlw	46	;'.'
   276  0081  3430               	retlw	48	;'0'
   277  0082  342C               	retlw	44	;','
   278  0083  3430               	retlw	48	;'0'
   279  0084  342E               	retlw	46	;'.'
   280  0085  3430               	retlw	48	;'0'
   281  0086  342C               	retlw	44	;','
   282  0087  344D               	retlw	77	;'M'
   283  0088  342C               	retlw	44	;','
   284  0089  3430               	retlw	48	;'0'
   285  008A  342E               	retlw	46	;'.'
   286  008B  3430               	retlw	48	;'0'
   287  008C  342C               	retlw	44	;','
   288  008D  344D               	retlw	77	;'M'
   289  008E  342C               	retlw	44	;','
   290  008F  342C               	retlw	44	;','
   291  0090  342A               	retlw	42	;'*'
   292  0091  3436               	retlw	54	;'6'
   293  0092  3438               	retlw	56	;'8'
   294  0093  340A               	retlw	10
   295  0094  3424               	retlw	36	;'$'
   296  0095  3447               	retlw	71	;'G'
   297  0096  3450               	retlw	80	;'P'
   298  0097  3452               	retlw	82	;'R'
   299  0098  344D               	retlw	77	;'M'
   300  0099  3443               	retlw	67	;'C'
   301  009A  342C               	retlw	44	;','
   302  009B  3431               	retlw	49	;'1'
   303  009C  3436               	retlw	54	;'6'
   304  009D  3434               	retlw	52	;'4'
   305  009E  3435               	retlw	53	;'5'
   306  009F  3431               	retlw	49	;'1'
   307  00A0  3434               	retlw	52	;'4'
   308  00A1  342E               	retlw	46	;'.'
   309  00A2  3435               	retlw	53	;'5'
   310  00A3  3433               	retlw	51	;'3'
   311  00A4  3435               	retlw	53	;'5'
   312  00A5  342C               	retlw	44	;','
   313  00A6  3441               	retlw	65	;'A'
   314  00A7  342C               	retlw	44	;','
   315  00A8  3431               	retlw	49	;'1'
   316  00A9  3430               	retlw	48	;'0'
   317  00AA  3430               	retlw	48	;'0'
   318  00AB  3436               	retlw	54	;'6'
   319  00AC  342E               	retlw	46	;'.'
   320  00AD  3434               	retlw	52	;'4'
   321  00AE  3431               	retlw	49	;'1'
   322  00AF  3432               	retlw	50	;'2'
   323  00B0  342C               	retlw	44	;','
   324  00B1  344E               	retlw	78	;'N'
   325  00B2  342C               	retlw	44	;','
   326  00B3  3430               	retlw	48	;'0'
   327  00B4  3437               	retlw	55	;'7'
   328  00B5  3436               	retlw	54	;'6'
   329  00B6  3432               	retlw	50	;'2'
   330  00B7  3431               	retlw	49	;'1'
   331  00B8  342E               	retlw	46	;'.'
   332  00B9  3431               	retlw	49	;'1'
   333  00BA  3431               	retlw	49	;'1'
   334  00BB  3434               	retlw	52	;'4'
   335  00BC  342C               	retlw	44	;','
   336  00BD  3445               	retlw	69	;'E'
   337  00BE  342C               	retlw	44	;','
   338  00BF  342C               	retlw	44	;','
   339  00C0  342C               	retlw	44	;','
   340  00C1  3431               	retlw	49	;'1'
   341  00C2  3438               	retlw	56	;'8'
   342  00C3  3431               	retlw	49	;'1'
   343  00C4  3432               	retlw	50	;'2'
   344  00C5  3431               	retlw	49	;'1'
   345  00C6  3439               	retlw	57	;'9'
   346  00C7  342C               	retlw	44	;','
   347  00C8  3430               	retlw	48	;'0'
   348  00C9  3430               	retlw	48	;'0'
   349  00CA  3430               	retlw	48	;'0'
   350  00CB  342E               	retlw	46	;'.'
   351  00CC  3430               	retlw	48	;'0'
   352  00CD  342C               	retlw	44	;','
   353  00CE  3457               	retlw	87	;'W'
   354  00CF  342A               	retlw	42	;'*'
   355  00D0  3437               	retlw	55	;'7'
   356  00D1  3445               	retlw	69	;'E'
   357  00D2  3400               	retlw	0
   358  00D3                     STR_2:	
   359  00D3  346C               	retlw	108	;'l'
   360  00D4  346F               	retlw	111	;'o'
   361  00D5  346E               	retlw	110	;'n'
   362  00D6  3467               	retlw	103	;'g'
   363  00D7  3469               	retlw	105	;'i'
   364  00D8  3474               	retlw	116	;'t'
   365  00D9  3475               	retlw	117	;'u'
   366  00DA  3464               	retlw	100	;'d'
   367  00DB  3465               	retlw	101	;'e'
   368  00DC  343A               	retlw	58	;':'
   369  00DD  3400               	retlw	0
   370  00DE                     STR_1:	
   371  00DE  346C               	retlw	108	;'l'
   372  00DF  3461               	retlw	97	;'a'
   373  00E0  3474               	retlw	116	;'t'
   374  00E1  3469               	retlw	105	;'i'
   375  00E2  3474               	retlw	116	;'t'
   376  00E3  3475               	retlw	117	;'u'
   377  00E4  3464               	retlw	100	;'d'
   378  00E5  3465               	retlw	101	;'e'
   379  00E6  343A               	retlw	58	;':'
   380  00E7  3400               	retlw	0
   381  00E8                     STR_3:	
   382  00E8  340A               	retlw	10
   383  00E9  340D               	retlw	13
   384  00EA  3400               	retlw	0
   385                           
   386                           	psect	cinit
   387  07F0                     start_initialization:	
   388                           ; #config settings
   389                           
   390  07F0                     __initialization:	
   391                           
   392                           ; Initialize objects allocated to BANK1
   393  07F0  1383               	bcf	3,7	;select IRP bank0
   394  07F1  30A7               	movlw	low (__pdataBANK1+7)
   395  07F2  00FD               	movwf	btemp+-1
   396  07F3  3006               	movlw	high __pidataBANK1
   397  07F4  00FE               	movwf	btemp
   398  07F5  303D               	movlw	low __pidataBANK1
   399  07F6  00FF               	movwf	btemp+1
   400  07F7  30A0               	movlw	low __pdataBANK1
   401  07F8  0084               	movwf	4
   402  07F9  120A  118A  2669   	fcall	init_ram0
   403  07FC                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  07FC                     __end_of__initialization:	
   407  07FC  0183               	clrf	3
   408  07FD  120A  118A  2EA4   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	dataBANK1
   411  00A0                     __pdataBANK1:	
   412  00A0                     str_receive@F1194:	
   413  00A0                     	ds	7
   414                           
   415                           	psect	inittext
   416  0665                     init_fetch0:	
   417                           ;	Called with low address in FSR and high address in W
   418                           
   419  0665  087E               	movf	126,w
   420  0666  008A               	movwf	10
   421  0667  087F               	movf	127,w
   422  0668  0082               	movwf	2
   423  0669                     init_ram0:	
   424                           ;Called with:
   425                           ;	high address of idata address in btemp 
   426                           ;	low address of idata address in btemp+1 
   427                           ;	low address of data in FSR
   428                           ;	high address + 1 of data in btemp-1
   429                           
   430  0669  2665  120A  118A   	fcall	init_fetch0
   431  066C  0080               	movwf	0
   432  066D  0A84               	incf	4,f
   433  066E  0804               	movf	4,w
   434  066F  067D               	xorwf	125,w
   435  0670  1903               	btfsc	3,2
   436  0671  3400               	retlw	0
   437  0672  0AFF               	incf	127,f
   438  0673  1903               	btfsc	3,2
   439  0674  0AFE               	incf	126,f
   440  0675  2E69               	goto	init_ram0
   441                           
   442                           	psect	cstackCOMMON
   443  0070                     __pcstackCOMMON:	
   444  0070                     ?_uart_init:	
   445  0070                     ??_uart_init:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_receive:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ??_receive:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_transmit:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ??_transmit:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_main:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_str_receive:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     transmit@b:	
   467                           ; 2 bytes @ 0x0
   468                           
   469                           
   470                           ; 1 bytes @ 0x0
   471  0070                     	ds	1
   472  0071                     ?_str_transmit:	
   473  0071                     receive@b:	
   474                           ; 1 bytes @ 0x1
   475                           
   476  0071                     str_transmit@p:	
   477                           ; 1 bytes @ 0x1
   478                           
   479                           
   480                           ; 2 bytes @ 0x1
   481  0071                     	ds	2
   482  0073                     ??_str_transmit:	
   483                           
   484                           ; 1 bytes @ 0x3
   485  0073                     	ds	2
   486  0075                     ??_str_receive:	
   487                           
   488                           ; 1 bytes @ 0x5
   489  0075                     	ds	4
   490  0079                     ??_main:	
   491                           
   492                           ; 1 bytes @ 0x9
   493  0079                     	ds	3
   494                           
   495                           	psect	cstackBANK0
   496  0020                     __pcstackBANK0:	
   497  0020                     str_receive@data:	
   498                           
   499                           ; 32 bytes @ 0x0
   500  0020                     	ds	32
   501  0040                     str_receive@g_check:	
   502                           
   503                           ; 7 bytes @ 0x20
   504  0040                     	ds	7
   505  0047                     str_receive@lon:	
   506                           
   507                           ; 11 bytes @ 0x27
   508  0047                     	ds	11
   509  0052                     str_receive@lat:	
   510                           
   511                           ; 10 bytes @ 0x32
   512  0052                     	ds	10
   513  005C                     str_receive@i:	
   514                           
   515                           ; 2 bytes @ 0x3C
   516  005C                     	ds	2
   517  005E                     str_receive@flag:	
   518                           
   519                           ; 2 bytes @ 0x3E
   520  005E                     	ds	2
   521  0060                     str_receive@lat_check:	
   522                           
   523                           ; 2 bytes @ 0x40
   524  0060                     	ds	2
   525  0062                     str_receive@count:	
   526                           
   527                           ; 2 bytes @ 0x42
   528  0062                     	ds	2
   529  0064                     str_receive@loncount:	
   530                           
   531                           ; 2 bytes @ 0x44
   532  0064                     	ds	2
   533  0066                     str_receive@latcount:	
   534                           
   535                           ; 2 bytes @ 0x46
   536  0066                     	ds	2
   537  0068                     str_receive@full_indx:	
   538                           
   539                           ; 1 bytes @ 0x48
   540  0068                     	ds	1
   541  0069                     str_receive@c:	
   542                           
   543                           ; 1 bytes @ 0x49
   544  0069                     	ds	1
   545                           
   546                           	psect	maintext
   547  06A4                     __pmaintext:	
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 107 in file "newmain.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : B00/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0
   569 ;;      Temps:          3       0       0       0       0
   570 ;;      Totals:         3       0       0       0       0
   571 ;;Total ram usage:        3 bytes
   572 ;; Hardware stack levels required when called:    3
   573 ;; This function calls:
   574 ;;		_str_receive
   575 ;;		_str_transmit
   576 ;;		_uart_init
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _main
   584  06A4                     _main:	
   585                           
   586                           ;newmain.c: 109: TRISC6=0;
   587                           
   588                           ;incstack = 0
   589                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   590  06A4  1683               	bsf	3,5	;RP0=1, select bank1
   591  06A5  1303               	bcf	3,6	;RP1=0, select bank1
   592  06A6  1307               	bcf	7,6	;volatile
   593                           
   594                           ;newmain.c: 110: TRISC7=1;
   595  06A7  1787               	bsf	7,7	;volatile
   596                           
   597                           ;newmain.c: 111: RC7=0;RC6=0;
   598  06A8  1283               	bcf	3,5	;RP0=0, select bank0
   599  06A9  1303               	bcf	3,6	;RP1=0, select bank0
   600  06AA  1387               	bcf	7,7	;volatile
   601  06AB  1307               	bcf	7,6	;volatile
   602                           
   603                           ;newmain.c: 112: TRISB0=1;
   604  06AC  1683               	bsf	3,5	;RP0=1, select bank1
   605  06AD  1303               	bcf	3,6	;RP1=0, select bank1
   606  06AE  1406               	bsf	6,0	;volatile
   607                           
   608                           ;newmain.c: 113: uart_init();
   609  06AF  120A  118A  2658  120A  118A  	fcall	_uart_init
   610                           
   611                           ;newmain.c: 114: if(RB0==1)
   612  06B4  1283               	bcf	3,5	;RP0=0, select bank0
   613  06B5  1303               	bcf	3,6	;RP1=0, select bank0
   614  06B6  1C06               	btfss	6,0	;volatile
   615  06B7  2ECE               	goto	l72
   616  06B8                     l743:	
   617                           ;newmain.c: 115: {
   618                           ;newmain.c: 117: while(1)
   619                           
   620                           
   621                           ;newmain.c: 118: {
   622                           ;newmain.c: 119: str_transmit("$GPGSA,A,3,01,02,03,04,05,06,07,08,09,10,11,12,1.0,1.0,1.
      +                          0*30\n$GPGGA,164514.535,1006.412,N,07621.114,E,1,12,1.0,0.0,M,0.0,M,,*68\n$GPRMC,164514.
      +                          535,A,1006.412,N,07621.114,E,,,181219,000.0,W*7E");
   623  06B8  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   624  06B9  00F1               	movwf	str_transmit@p
   625  06BA  3080               	movlw	128
   626  06BB  00F2               	movwf	str_transmit@p+1
   627  06BC  120A  118A  2676  120A  118A  	fcall	_str_transmit
   628                           
   629                           ;newmain.c: 120: _delay((unsigned long)((5000)*(16000000/4000.0)));
   630  06C1  3066               	movlw	102
   631  06C2  00FB               	movwf	??_main+2
   632  06C3  3076               	movlw	118
   633  06C4  00FA               	movwf	??_main+1
   634  06C5  30C1               	movlw	193
   635  06C6  00F9               	movwf	??_main
   636  06C7                     u357:	
   637  06C7  0BF9               	decfsz	??_main,f
   638  06C8  2EC7               	goto	u357
   639  06C9  0BFA               	decfsz	??_main+1,f
   640  06CA  2EC7               	goto	u357
   641  06CB  0BFB               	decfsz	??_main+2,f
   642  06CC  2EC7               	goto	u357
   643  06CD  2EB8               	goto	l743
   644  06CE                     l72:	
   645                           ;newmain.c: 121: }
   646                           ;newmain.c: 122: }
   647                           
   648                           
   649                           ;newmain.c: 123: else if(RB0==0)
   650  06CE  1806               	btfsc	6,0	;volatile
   651  06CF  2EE2               	goto	l81
   652  06D0                     l747:	
   653                           ;newmain.c: 124: {
   654                           ;newmain.c: 125: while(1)
   655                           
   656                           
   657                           ;newmain.c: 126: {
   658                           ;newmain.c: 127: str_receive();
   659  06D0  120A  118A  26E5  120A  118A  	fcall	_str_receive
   660                           
   661                           ;newmain.c: 128: _delay((unsigned long)((2000)*(16000000/4000.0)));
   662  06D5  3029               	movlw	41
   663  06D6  00FB               	movwf	??_main+2
   664  06D7  3096               	movlw	150
   665  06D8  00FA               	movwf	??_main+1
   666  06D9  307F               	movlw	127
   667  06DA  00F9               	movwf	??_main
   668  06DB                     u367:	
   669  06DB  0BF9               	decfsz	??_main,f
   670  06DC  2EDB               	goto	u367
   671  06DD  0BFA               	decfsz	??_main+1,f
   672  06DE  2EDB               	goto	u367
   673  06DF  0BFB               	decfsz	??_main+2,f
   674  06E0  2EDB               	goto	u367
   675  06E1  2ED0               	goto	l747
   676  06E2                     l81:	
   677  06E2  120A  118A  2800   	ljmp	start
   678  06E5                     __end_of_main:	
   679                           
   680                           	psect	text1
   681  0658                     __ptext1:	
   682 ;; *************** function _uart_init *****************
   683 ;; Defined at:
   684 ;;		line 12 in file "newmain.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   698 ;;      Params:         0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0
   701 ;;      Totals:         0       0       0       0       0
   702 ;;Total ram usage:        0 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           
   712                           ;psect for function _uart_init
   713  0658                     _uart_init:	
   714                           
   715                           ;newmain.c: 14: TXSTA=0x24;
   716                           
   717                           ;incstack = 0
   718                           ; Regs used in _uart_init: [wreg]
   719  0658  3024               	movlw	36
   720  0659  1683               	bsf	3,5	;RP0=1, select bank1
   721  065A  1303               	bcf	3,6	;RP1=0, select bank1
   722  065B  0098               	movwf	24	;volatile
   723                           
   724                           ;newmain.c: 15: RCSTA=0x90;
   725  065C  3090               	movlw	144
   726  065D  1283               	bcf	3,5	;RP0=0, select bank0
   727  065E  1303               	bcf	3,6	;RP1=0, select bank0
   728  065F  0098               	movwf	24	;volatile
   729                           
   730                           ;newmain.c: 16: SPBRG=103;
   731  0660  3067               	movlw	103
   732  0661  1683               	bsf	3,5	;RP0=1, select bank1
   733  0662  1303               	bcf	3,6	;RP1=0, select bank1
   734  0663  0099               	movwf	25	;volatile
   735  0664  0008               	return
   736  0665                     __end_of_uart_init:	
   737                           
   738                           	psect	text2
   739  06E5                     __ptext2:	
   740 ;; *************** function _str_receive *****************
   741 ;; Defined at:
   742 ;;		line 42 in file "newmain.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  data           32    0[BANK0 ] unsigned char [32]
   747 ;;  lon            11   39[BANK0 ] unsigned char [11]
   748 ;;  lat            10   50[BANK0 ] unsigned char [10]
   749 ;;  g_check         7   32[BANK0 ] unsigned char [7]
   750 ;;  latcount        2   70[BANK0 ] int 
   751 ;;  loncount        2   68[BANK0 ] int 
   752 ;;  count           2   66[BANK0 ] int 
   753 ;;  lat_check       2   64[BANK0 ] int 
   754 ;;  flag            2   62[BANK0 ] int 
   755 ;;  i               2   60[BANK0 ] int 
   756 ;;  c               1   73[BANK0 ] unsigned char 
   757 ;;  full_indx       1   72[BANK0 ] unsigned char 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  2   51[None  ] int 
   760 ;; Registers used:
   761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       0       0       0       0
   768 ;;      Locals:         0      74       0       0       0
   769 ;;      Temps:          4       0       0       0       0
   770 ;;      Totals:         4      74       0       0       0
   771 ;;Total ram usage:       78 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:    2
   774 ;; This function calls:
   775 ;;		_receive
   776 ;;		_str_transmit
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _str_receive
   784  06E5                     _str_receive:	
   785                           
   786                           ;newmain.c: 44: char c,lat[10],lon[11],g_check[]="$GPGGA",data[32],full_indx=0;
   787                           
   788                           ;incstack = 0
   789                           ; Regs used in _str_receive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   790  06E5  3040               	movlw	str_receive@g_check& (0+255)
   791  06E6  0084               	movwf	4
   792  06E7  30A0               	movlw	low str_receive@F1194
   793  06E8  00F5               	movwf	??_str_receive
   794  06E9  0804               	movf	4,w
   795  06EA  00F6               	movwf	??_str_receive+1
   796  06EB  3007               	movlw	7
   797  06EC  00F7               	movwf	??_str_receive+2
   798  06ED                     u210:	
   799  06ED  0875               	movf	??_str_receive,w
   800  06EE  0084               	movwf	4
   801  06EF  1383               	bcf	3,7	;select IRP bank1
   802  06F0  0800               	movf	0,w
   803  06F1  00F8               	movwf	??_str_receive+3
   804  06F2  0AF5               	incf	??_str_receive,f
   805  06F3  0876               	movf	??_str_receive+1,w
   806  06F4  0084               	movwf	4
   807  06F5  0878               	movf	??_str_receive+3,w
   808  06F6  0080               	movwf	0
   809  06F7  0AF6               	incf	??_str_receive+1,f
   810  06F8  0BF7               	decfsz	??_str_receive+2,f
   811  06F9  2EED               	goto	u210
   812  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   813  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   814  06FC  01E8               	clrf	str_receive@full_indx
   815                           
   816                           ;newmain.c: 45: int i=0,count=0,loncount=0,latcount=0,flag=0,lat_check=0;
   817  06FD  01DC               	clrf	str_receive@i
   818  06FE  01DD               	clrf	str_receive@i+1
   819  06FF  01E2               	clrf	str_receive@count
   820  0700  01E3               	clrf	str_receive@count+1
   821  0701  01E4               	clrf	str_receive@loncount
   822  0702  01E5               	clrf	str_receive@loncount+1
   823  0703  01E6               	clrf	str_receive@latcount
   824  0704  01E7               	clrf	str_receive@latcount+1
   825  0705  01DE               	clrf	str_receive@flag
   826  0706  01DF               	clrf	str_receive@flag+1
   827  0707  01E0               	clrf	str_receive@lat_check
   828  0708  01E1               	clrf	str_receive@lat_check+1
   829  0709                     l731:	
   830                           ;newmain.c: 46: while(i<=190)
   831                           
   832  0709  085D               	movf	str_receive@i+1,w
   833  070A  3A80               	xorlw	128
   834  070B  00FF               	movwf	127
   835  070C  3080               	movlw	128
   836  070D  027F               	subwf	127,w
   837  070E  1D03               	skipz
   838  070F  2F12               	goto	u325
   839  0710  30BF               	movlw	191
   840  0711  025C               	subwf	str_receive@i,w
   841  0712                     u325:	
   842  0712  1803               	btfsc	3,0
   843  0713  2FC4               	goto	l733
   844                           
   845                           ;newmain.c: 47: {
   846                           ;newmain.c: 48: c=receive();
   847  0714  120A  118A  2644  120A  118A  	fcall	_receive
   848  0719  00F5               	movwf	??_str_receive
   849  071A  0875               	movf	??_str_receive,w
   850  071B  1283               	bcf	3,5	;RP0=0, select bank0
   851  071C  1303               	bcf	3,6	;RP1=0, select bank0
   852  071D  00E9               	movwf	str_receive@c
   853                           
   854                           ;newmain.c: 51: if(count==6||flag==1)
   855  071E  3006               	movlw	6
   856  071F  0662               	xorwf	str_receive@count,w
   857  0720  0463               	iorwf	str_receive@count+1,w
   858  0721  1903               	btfsc	3,2
   859  0722  2F27               	goto	l687
   860  0723  035E               	decf	str_receive@flag,w
   861  0724  045F               	iorwf	str_receive@flag+1,w
   862  0725  1D03               	btfss	3,2
   863  0726  2FA5               	goto	l719
   864  0727                     l687:	
   865                           
   866                           ;newmain.c: 52: {
   867                           ;newmain.c: 53: flag=1;
   868  0727  3001               	movlw	1
   869  0728  00DE               	movwf	str_receive@flag
   870  0729  3000               	movlw	0
   871  072A  00DF               	movwf	str_receive@flag+1
   872                           
   873                           ;newmain.c: 56: data[full_indx]=c;
   874  072B  0869               	movf	str_receive@c,w
   875  072C  00F5               	movwf	??_str_receive
   876  072D  0868               	movf	str_receive@full_indx,w
   877  072E  3E20               	addlw	(low (str_receive@data| 0))& (0+255)
   878  072F  0084               	movwf	4
   879  0730  0875               	movf	??_str_receive,w
   880  0731  1383               	bcf	3,7	;select IRP bank0
   881  0732  0080               	movwf	0
   882                           
   883                           ;newmain.c: 59: if(lat_check>11&&latcount<=8)
   884  0733  0861               	movf	str_receive@lat_check+1,w
   885  0734  3A80               	xorlw	128
   886  0735  00FF               	movwf	127
   887  0736  3080               	movlw	128
   888  0737  027F               	subwf	127,w
   889  0738  1D03               	skipz
   890  0739  2F3C               	goto	u245
   891  073A  300C               	movlw	12
   892  073B  0260               	subwf	str_receive@lat_check,w
   893  073C                     u245:	
   894  073C  1C03               	skipc
   895  073D  2F65               	goto	l703
   896  073E  1283               	bcf	3,5	;RP0=0, select bank0
   897  073F  1303               	bcf	3,6	;RP1=0, select bank0
   898  0740  0867               	movf	str_receive@latcount+1,w
   899  0741  3A80               	xorlw	128
   900  0742  00FF               	movwf	127
   901  0743  3080               	movlw	128
   902  0744  027F               	subwf	127,w
   903  0745  1D03               	skipz
   904  0746  2F49               	goto	u255
   905  0747  3009               	movlw	9
   906  0748  0266               	subwf	str_receive@latcount,w
   907  0749                     u255:	
   908  0749  1803               	skipnc
   909  074A  2F65               	goto	l703
   910                           
   911                           ;newmain.c: 60: {
   912                           ;newmain.c: 61: lat[latcount]=c;
   913  074B  1283               	bcf	3,5	;RP0=0, select bank0
   914  074C  1303               	bcf	3,6	;RP1=0, select bank0
   915  074D  0869               	movf	str_receive@c,w
   916  074E  00F5               	movwf	??_str_receive
   917  074F  0866               	movf	str_receive@latcount,w
   918  0750  3E52               	addlw	(low (str_receive@lat| 0))& (0+255)
   919  0751  0084               	movwf	4
   920  0752  0875               	movf	??_str_receive,w
   921  0753  1383               	bcf	3,7	;select IRP bank0
   922  0754  0080               	movwf	0
   923                           
   924                           ;newmain.c: 62: latcount++;
   925  0755  3001               	movlw	1
   926  0756  07E6               	addwf	str_receive@latcount,f
   927  0757  1803               	skipnc
   928  0758  0AE7               	incf	str_receive@latcount+1,f
   929  0759  3000               	movlw	0
   930  075A  07E7               	addwf	str_receive@latcount+1,f
   931                           
   932                           ;newmain.c: 63: if(c==',')
   933  075B  302C               	movlw	44
   934  075C  0669               	xorwf	str_receive@c,w
   935  075D  1D03               	btfss	3,2
   936  075E  2F65               	goto	l703
   937                           
   938                           ;newmain.c: 64: latcount--;
   939  075F  30FF               	movlw	255
   940  0760  07E6               	addwf	str_receive@latcount,f
   941  0761  1803               	skipnc
   942  0762  0AE7               	incf	str_receive@latcount+1,f
   943  0763  30FF               	movlw	255
   944  0764  07E7               	addwf	str_receive@latcount+1,f
   945  0765                     l703:	
   946                           
   947                           ;newmain.c: 65: }
   948                           ;newmain.c: 68: if(lat_check>22&&loncount<=9)
   949  0765  1283               	bcf	3,5	;RP0=0, select bank0
   950  0766  1303               	bcf	3,6	;RP1=0, select bank0
   951  0767  0861               	movf	str_receive@lat_check+1,w
   952  0768  3A80               	xorlw	128
   953  0769  00FF               	movwf	127
   954  076A  3080               	movlw	128
   955  076B  027F               	subwf	127,w
   956  076C  1D03               	skipz
   957  076D  2F70               	goto	u275
   958  076E  3017               	movlw	23
   959  076F  0260               	subwf	str_receive@lat_check,w
   960  0770                     u275:	
   961  0770  1C03               	skipc
   962  0771  2F99               	goto	l715
   963  0772  1283               	bcf	3,5	;RP0=0, select bank0
   964  0773  1303               	bcf	3,6	;RP1=0, select bank0
   965  0774  0865               	movf	str_receive@loncount+1,w
   966  0775  3A80               	xorlw	128
   967  0776  00FF               	movwf	127
   968  0777  3080               	movlw	128
   969  0778  027F               	subwf	127,w
   970  0779  1D03               	skipz
   971  077A  2F7D               	goto	u285
   972  077B  300A               	movlw	10
   973  077C  0264               	subwf	str_receive@loncount,w
   974  077D                     u285:	
   975  077D  1803               	skipnc
   976  077E  2F99               	goto	l715
   977                           
   978                           ;newmain.c: 69: {
   979                           ;newmain.c: 70: lon[loncount]=c;
   980  077F  1283               	bcf	3,5	;RP0=0, select bank0
   981  0780  1303               	bcf	3,6	;RP1=0, select bank0
   982  0781  0869               	movf	str_receive@c,w
   983  0782  00F5               	movwf	??_str_receive
   984  0783  0864               	movf	str_receive@loncount,w
   985  0784  3E47               	addlw	(low (str_receive@lon| 0))& (0+255)
   986  0785  0084               	movwf	4
   987  0786  0875               	movf	??_str_receive,w
   988  0787  1383               	bcf	3,7	;select IRP bank0
   989  0788  0080               	movwf	0
   990                           
   991                           ;newmain.c: 71: loncount++;
   992  0789  3001               	movlw	1
   993  078A  07E4               	addwf	str_receive@loncount,f
   994  078B  1803               	skipnc
   995  078C  0AE5               	incf	str_receive@loncount+1,f
   996  078D  3000               	movlw	0
   997  078E  07E5               	addwf	str_receive@loncount+1,f
   998                           
   999                           ;newmain.c: 72: if(c==',')
  1000  078F  302C               	movlw	44
  1001  0790  0669               	xorwf	str_receive@c,w
  1002  0791  1D03               	btfss	3,2
  1003  0792  2F99               	goto	l715
  1004                           
  1005                           ;newmain.c: 73: loncount--;
  1006  0793  30FF               	movlw	255
  1007  0794  07E4               	addwf	str_receive@loncount,f
  1008  0795  1803               	skipnc
  1009  0796  0AE5               	incf	str_receive@loncount+1,f
  1010  0797  30FF               	movlw	255
  1011  0798  07E5               	addwf	str_receive@loncount+1,f
  1012  0799                     l715:	
  1013                           
  1014                           ;newmain.c: 74: }
  1015                           ;newmain.c: 76: full_indx++;
  1016  0799  3001               	movlw	1
  1017  079A  00F5               	movwf	??_str_receive
  1018  079B  0875               	movf	??_str_receive,w
  1019  079C  1283               	bcf	3,5	;RP0=0, select bank0
  1020  079D  1303               	bcf	3,6	;RP1=0, select bank0
  1021  079E  07E8               	addwf	str_receive@full_indx,f
  1022                           
  1023                           ;newmain.c: 77: lat_check++;
  1024  079F  3001               	movlw	1
  1025  07A0  07E0               	addwf	str_receive@lat_check,f
  1026  07A1  1803               	skipnc
  1027  07A2  0AE1               	incf	str_receive@lat_check+1,f
  1028  07A3  3000               	movlw	0
  1029  07A4  07E1               	addwf	str_receive@lat_check+1,f
  1030  07A5                     l719:	
  1031                           
  1032                           ;newmain.c: 79: }
  1033                           ;newmain.c: 81: if(full_indx>=37)
  1034  07A5  3025               	movlw	37
  1035  07A6  0268               	subwf	str_receive@full_indx,w
  1036  07A7  1C03               	skipc
  1037  07A8  2FAC               	goto	l723
  1038                           
  1039                           ;newmain.c: 82: {
  1040                           ;newmain.c: 83: flag=0;
  1041  07A9  01DE               	clrf	str_receive@flag
  1042  07AA  01DF               	clrf	str_receive@flag+1
  1043                           
  1044                           ;newmain.c: 84: full_indx=0;
  1045  07AB  01E8               	clrf	str_receive@full_indx
  1046  07AC                     l723:	
  1047                           
  1048                           ;newmain.c: 85: }
  1049                           ;newmain.c: 87: if(c==g_check[count])
  1050  07AC  0862               	movf	str_receive@count,w
  1051  07AD  3E40               	addlw	(low (str_receive@g_check| 0))& (0+255)
  1052  07AE  0084               	movwf	4
  1053  07AF  1383               	bcf	3,7	;select IRP bank0
  1054  07B0  0800               	movf	0,w
  1055  07B1  0669               	xorwf	str_receive@c,w
  1056  07B2  1D03               	skipz
  1057  07B3  2FBB               	goto	l727
  1058                           
  1059                           ;newmain.c: 88: {
  1060                           ;newmain.c: 89: count++;
  1061  07B4  3001               	movlw	1
  1062  07B5  07E2               	addwf	str_receive@count,f
  1063  07B6  1803               	skipnc
  1064  07B7  0AE3               	incf	str_receive@count+1,f
  1065  07B8  3000               	movlw	0
  1066  07B9  07E3               	addwf	str_receive@count+1,f
  1067                           
  1068                           ;newmain.c: 90: }
  1069  07BA  2FBD               	goto	l729
  1070  07BB                     l727:	
  1071                           
  1072                           ;newmain.c: 91: else
  1073                           ;newmain.c: 92: {
  1074                           ;newmain.c: 93: count=0;
  1075  07BB  01E2               	clrf	str_receive@count
  1076  07BC  01E3               	clrf	str_receive@count+1
  1077  07BD                     l729:	
  1078                           
  1079                           ;newmain.c: 94: }
  1080                           ;newmain.c: 95: i++;
  1081  07BD  3001               	movlw	1
  1082  07BE  07DC               	addwf	str_receive@i,f
  1083  07BF  1803               	skipnc
  1084  07C0  0ADD               	incf	str_receive@i+1,f
  1085  07C1  3000               	movlw	0
  1086  07C2  07DD               	addwf	str_receive@i+1,f
  1087  07C3  2F09               	goto	l731
  1088  07C4                     l733:	
  1089                           
  1090                           ;newmain.c: 96: }
  1091                           ;newmain.c: 98: str_transmit("latitude:");
  1092  07C4  30CC               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1093  07C5  00F1               	movwf	str_transmit@p
  1094  07C6  3080               	movlw	128
  1095  07C7  00F2               	movwf	str_transmit@p+1
  1096  07C8  120A  118A  2676  120A  118A  	fcall	_str_transmit
  1097                           
  1098                           ;newmain.c: 99: str_transmit(lat);
  1099  07CD  3052               	movlw	(low (str_receive@lat| 0))& (0+255)
  1100  07CE  00F1               	movwf	str_transmit@p
  1101  07CF  3000               	movlw	0
  1102  07D0  00F2               	movwf	str_transmit@p+1
  1103  07D1  120A  118A  2676  120A  118A  	fcall	_str_transmit
  1104                           
  1105                           ;newmain.c: 100: str_transmit("longitude:");
  1106  07D6  30C1               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1107  07D7  00F1               	movwf	str_transmit@p
  1108  07D8  3080               	movlw	128
  1109  07D9  00F2               	movwf	str_transmit@p+1
  1110  07DA  120A  118A  2676  120A  118A  	fcall	_str_transmit
  1111                           
  1112                           ;newmain.c: 101: str_transmit(lon);
  1113  07DF  3047               	movlw	(low (str_receive@lon| 0))& (0+255)
  1114  07E0  00F1               	movwf	str_transmit@p
  1115  07E1  3000               	movlw	0
  1116  07E2  00F2               	movwf	str_transmit@p+1
  1117  07E3  120A  118A  2676  120A  118A  	fcall	_str_transmit
  1118                           
  1119                           ;newmain.c: 102: str_transmit("\n\r");
  1120  07E8  30D6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1121  07E9  00F1               	movwf	str_transmit@p
  1122  07EA  3080               	movlw	128
  1123  07EB  00F2               	movwf	str_transmit@p+1
  1124  07EC  120A  118A  2676   	fcall	_str_transmit
  1125  07EF  0008               	return
  1126  07F0                     __end_of_str_receive:	
  1127                           ;newmain.c: 103: return;
  1128                           
  1129                           
  1130                           	psect	text3
  1131  0676                     __ptext3:	
  1132 ;; *************** function _str_transmit *****************
  1133 ;; Defined at:
  1134 ;;		line 32 in file "newmain.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  p               2    1[COMMON] PTR unsigned char 
  1137 ;;		 -> STR_4(192), STR_3(3), STR_2(11), STR_1(10), 
  1138 ;;		 -> str_receive@lon(11), str_receive@lat(10), 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         2       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0
  1152 ;;      Temps:          2       0       0       0       0
  1153 ;;      Totals:         4       0       0       0       0
  1154 ;;Total ram usage:        4 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    1
  1157 ;; This function calls:
  1158 ;;		_transmit
  1159 ;; This function is called by:
  1160 ;;		_str_receive
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           
  1166                           ;psect for function _str_transmit
  1167  0676                     _str_transmit:	
  1168  0676                     l663:	
  1169                           ;newmain.c: 34: while(*p!='\0')
  1170                           
  1171                           ;incstack = 0
  1172                           ; Regs used in _str_transmit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1173                           
  1174  0676  0872               	movf	str_transmit@p+1,w
  1175  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1176  0678  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0679  00FF               	movwf	127
  1178  067A  0871               	movf	str_transmit@p,w
  1179  067B  0084               	movwf	4
  1180  067C  120A  118A  2003  120A  118A  	fcall	stringtab
  1181  0681  3A00               	xorlw	0
  1182  0682  1903               	btfsc	3,2
  1183  0683  0008               	return
  1184                           
  1185                           ;newmain.c: 35: {
  1186                           ;newmain.c: 36: transmit(*p);
  1187  0684  0872               	movf	str_transmit@p+1,w
  1188  0685  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0686  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0687  00FF               	movwf	127
  1191  0688  0871               	movf	str_transmit@p,w
  1192  0689  0084               	movwf	4
  1193  068A  120A  118A  2003  120A  118A  	fcall	stringtab
  1194  068F  120A  118A  264E  120A  118A  	fcall	_transmit
  1195                           
  1196                           ;newmain.c: 37: p++;
  1197  0694  3001               	movlw	1
  1198  0695  07F1               	addwf	str_transmit@p,f
  1199  0696  1803               	skipnc
  1200  0697  0AF2               	incf	str_transmit@p+1,f
  1201  0698  3000               	movlw	0
  1202  0699  07F2               	addwf	str_transmit@p+1,f
  1203                           
  1204                           ;newmain.c: 38: _delay((unsigned long)((10)*(16000000/4000.0)));
  1205  069A  3034               	movlw	52
  1206  069B  00F4               	movwf	??_str_transmit+1
  1207  069C  30F1               	movlw	241
  1208  069D  00F3               	movwf	??_str_transmit
  1209  069E                     u377:	
  1210  069E  0BF3               	decfsz	??_str_transmit,f
  1211  069F  2E9E               	goto	u377
  1212  06A0  0BF4               	decfsz	??_str_transmit+1,f
  1213  06A1  2E9E               	goto	u377
  1214  06A2  2EA3               	nop2
  1215  06A3  2E76               	goto	l663
  1216  06A4                     __end_of_str_transmit:	
  1217                           
  1218                           	psect	text4
  1219  064E                     __ptext4:	
  1220 ;; *************** function _transmit *****************
  1221 ;; Defined at:
  1222 ;;		line 26 in file "newmain.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  b               1    wreg     unsigned char 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  b               1    0[COMMON] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1236 ;;      Params:         0       0       0       0       0
  1237 ;;      Locals:         1       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0
  1239 ;;      Totals:         1       0       0       0       0
  1240 ;;Total ram usage:        1 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; This function calls:
  1243 ;;		Nothing
  1244 ;; This function is called by:
  1245 ;;		_str_transmit
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _transmit
  1251  064E                     _transmit:	
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _transmit: [wreg]
  1255                           ;transmit@b stored from wreg
  1256  064E  00F0               	movwf	transmit@b
  1257                           
  1258                           ;newmain.c: 28: TXREG=b;
  1259  064F  0870               	movf	transmit@b,w
  1260  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0652  0099               	movwf	25	;volatile
  1263  0653                     l40:	
  1264                           ;newmain.c: 29: while(!TRMT);
  1265                           
  1266  0653  1683               	bsf	3,5	;RP0=1, select bank1
  1267  0654  1303               	bcf	3,6	;RP1=0, select bank1
  1268  0655  1898               	btfsc	24,1	;volatile
  1269  0656  0008               	return
  1270  0657  2E53               	goto	l40
  1271  0658                     __end_of_transmit:	
  1272                           
  1273                           	psect	text5
  1274  0644                     __ptext5:	
  1275 ;; *************** function _receive *****************
  1276 ;; Defined at:
  1277 ;;		line 19 in file "newmain.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  b               1    1[COMMON] unsigned char 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      unsigned char 
  1284 ;; Registers used:
  1285 ;;		wreg
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         0       0       0       0       0
  1292 ;;      Locals:         1       0       0       0       0
  1293 ;;      Temps:          1       0       0       0       0
  1294 ;;      Totals:         2       0       0       0       0
  1295 ;;Total ram usage:        2 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_str_receive
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           
  1305                           ;psect for function _receive
  1306  0644                     _receive:	
  1307  0644                     l34:	
  1308                           ;newmain.c: 21: while(!RCIF);
  1309                           
  1310                           ;incstack = 0
  1311                           ; Regs used in _receive: [wreg]
  1312                           
  1313  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0646  1E8C               	btfss	12,5	;volatile
  1316  0647  2E44               	goto	l34
  1317                           
  1318                           ;newmain.c: 22: char b=RCREG;
  1319  0648  081A               	movf	26,w	;volatile
  1320  0649  00F0               	movwf	??_receive
  1321  064A  0870               	movf	??_receive,w
  1322  064B  00F1               	movwf	receive@b
  1323                           
  1324                           ;newmain.c: 23: return b;
  1325  064C  0871               	movf	receive@b,w
  1326  064D  0008               	return
  1327  064E                     __end_of_receive:	
  1328  007E                     btemp	set	126	;btemp
  1329  007E                     wtemp0	set	126


Data Sizes:
    Strings     216
    Constant    0
    Data        7
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     74      74
    BANK1            80      0       7
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    str_transmit@p	PTR unsigned char  size(2) Largest target is 192
		 -> STR_4(CODE[192]), STR_3(CODE[3]), STR_2(CODE[11]), STR_1(CODE[10]), 
		 -> str_receive@lon(BANK0[11]), str_receive@lat(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_str_receive
    _str_receive->_str_transmit
    _str_transmit->_transmit

Critical Paths under _main in BANK0

    _main->_str_receive

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1353
                                              9 COMMON     3     3      0
                        _str_receive
                       _str_transmit
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _str_receive                                         78    78      0     968
                                              5 COMMON     4     4      0
                                              0 BANK0     74    74      0
                            _receive
                       _str_transmit
 ---------------------------------------------------------------------------------
 (1) _str_transmit                                         4     2      2     385
                                              1 COMMON     4     2      2
                           _transmit
 ---------------------------------------------------------------------------------
 (2) _transmit                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _receive                                              2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _str_receive
     _receive
     _str_transmit
       _transmit
   _str_transmit
     _transmit
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       7       7        8.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4A      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5D      12        0.0%
ABS                  0      0      5D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Dec 19 10:19:41 2019

                      pc 0002                       l40 0653                       l34 0644  
                     l72 06CE                       l81 06E2                       fsr 0004  
                    l703 0765                      l723 07AC                      l715 0799  
                    l731 0709                      l733 07C4                      l663 0676  
                    l727 07BB                      l719 07A5                      l743 06B8  
                    l729 07BD                      l747 06D0                      l687 0727  
                    _RB0 0030                      _RC6 003E                      _RC7 003F  
                    u210 06ED                      u325 0712                      u245 073C  
                    u255 0749                      u275 0770                      u285 077D  
                    u357 06C7                      u367 06DB                      u377 069E  
                    fsr0 0004                      indf 0000                     STR_1 00DE  
                   STR_2 00D3                     STR_3 00E8                     STR_4 0013  
                   _RCIF 0065                     _TRMT 04C1                     _main 06A4  
                   btemp 007E              _str_receive 06E5                     start 0000  
  __size_of_str_transmit 002E                    ?_main 0070                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _TXREG 0019  
                  _TXSTA 0098          __end_of_receive 064E                    pclath 000A  
                  status 0003                    wtemp0 007E             _str_transmit 0676  
        __initialization 07F0             __end_of_main 06E5                   ??_main 0079  
                 _TRISB0 0430                   _TRISC6 043E                   _TRISC7 043F  
              ??_receive 0070         __end_of_transmit 0658  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK1 063D             ?_str_receive 0070  
             __pmaintext 06A4             str_receive@c 0069             str_receive@i 005C  
     __size_of_uart_init 000D               __stringtab 0003                ?_transmit 0070  
                __ptext1 0658                  __ptext2 06E5                  __ptext3 0676  
                __ptext4 064E                  __ptext5 0644                  _receive 0644  
         str_receive@lat 0052           str_receive@lon 0047     end_of_initialization 07FC  
      __end_of_uart_init 0665               ??_transmit 0070     __size_of_str_receive 010B  
   str_receive@lat_check 0060      start_initialization 07F0     str_receive@full_indx 0068  
             init_fetch0 0665              __pdataBANK1 00A0                ___latbits 0002  
          __pcstackBANK0 0020            ?_str_transmit 0071                __pstrings 0003  
      __size_of_transmit 000A                 ?_receive 0070         str_receive@F1194 00A0  
       str_receive@count 0062           ??_str_transmit 0073                _uart_init 0658  
            __stringbase 0012      str_receive@latcount 0066      str_receive@loncount 0064  
          str_transmit@p 0071               ?_uart_init 0070       __end_of__stringtab 0013  
       __size_of_receive 000A            ??_str_receive 0075            __size_of_main 0041  
        str_receive@data 0020          str_receive@flag 005E                 _transmit 064E  
     str_receive@g_check 0040     __end_of_str_transmit 06A4                 init_ram0 0669  
              transmit@b 0070                 receive@b 0071                stringcode 000D  
    __end_of_str_receive 07F0              ??_uart_init 0070                 stringdir 000D  
               stringtab 0003  
